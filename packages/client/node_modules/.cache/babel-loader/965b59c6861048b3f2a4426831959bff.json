{"ast":null,"code":"var _jsxFileName = \"/Users/jason/Projects/helpful_human/packages/client/src/store.js\";\nimport React, { createContext, useReducer } from 'react';\nimport { getRandomColors } from 'shared';\nconst initialSate = {\n  colors: getRandomColors(100),\n  recentColors: [],\n  filter: null\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'add_color':\n      return { ...state,\n        colors: [...state.colors, action.payload]\n      };\n\n    case 'remove_color':\n      break;\n\n    case 'add_color_to_recents':\n      return { ...state,\n        recentColors: [...state.recentColors, action.payload]\n      };\n\n    case 'set_colors':\n      return { ...state,\n        colors: action.payload\n      };\n\n    case 'set_filter':\n      return { ...state,\n        filter: action.payload.length ? action.payload : null\n      };\n  }\n};\n\nconst getVisibleColors = state => {\n  let colors = state.colors;\n\n  if (state.filter) {\n    colors = colors.filter(color => color.includes(state.filter));\n  }\n\n  return colors;\n};\n\nexport const ColorContext = createContext(null);\nexport const ColorProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(reducer, initialSate);\n\n  const addColor = color => {\n    dispatch({\n      type: 'add_color',\n      payload: color\n    });\n  };\n\n  const removeColor = color => {\n    dispatch({\n      type: 'remove_color',\n      payload: color\n    });\n  };\n\n  const addColorToRecents = color => {\n    dispatch({\n      type: 'add_color_to_recents',\n      payload: color\n    });\n  };\n\n  const setColors = colors => {\n    dispatch({\n      type: 'set_colors',\n      payload: colors\n    });\n  };\n\n  const setFilter = filter => {\n    dispatch({\n      type: 'set_filter',\n      payload: filter\n    });\n  };\n\n  const value = {\n    colors: getVisibleColors(state),\n    setColors,\n    addColor,\n    removeColor,\n    filter: state.filter,\n    setFilter,\n    addColorToRecents,\n    recentColors: state.recentColors\n  };\n  return /*#__PURE__*/React.createElement(ColorContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"sources":["/Users/jason/Projects/helpful_human/packages/client/src/store.js"],"names":["React","createContext","useReducer","getRandomColors","initialSate","colors","recentColors","filter","reducer","state","action","type","payload","length","getVisibleColors","color","includes","ColorContext","ColorProvider","children","dispatch","addColor","removeColor","addColorToRecents","setColors","setFilter","value"],"mappings":"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","sourcesContent":["import React, { createContext, useReducer } from 'react'\nimport { getRandomColors } from 'shared'\n\nconst initialSate = {\n  colors: getRandomColors(100),\n  recentColors: [],\n  filter: null\n}\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'add_color':\n      return {\n        ...state,\n        colors: [...state.colors, action.payload]\n      }\n    case 'remove_color':\n      break\n    case 'add_color_to_recents':\n      return {\n        ...state,\n        recentColors: [...state.recentColors, action.payload]\n      }\n    case 'set_colors':\n      return {\n        ...state,\n        colors: action.payload\n      }\n    case 'set_filter':\n      return {\n        ...state,\n        filter: action.payload.length ? action.payload : null\n      }\n  }\n}\n\nconst getVisibleColors = (state) => {\n  let colors = state.colors\n  if (state.filter) {\n    colors = colors.filter(color => color.includes(state.filter))\n  }\n  return colors\n}\n\nexport const ColorContext = createContext(null)\nexport const ColorProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialSate)\n\n  const addColor = color => {\n    dispatch({\n      type: 'add_color',\n      payload: color\n    })\n  }\n\n  const removeColor = color => {\n    dispatch({\n      type: 'remove_color',\n      payload: color\n    })\n  }\n\n  const addColorToRecents = color => {\n    dispatch({\n      type: 'add_color_to_recents',\n      payload: color\n    })\n  }\n\n  const setColors = colors => {\n    dispatch({\n      type: 'set_colors',\n      payload: colors\n    })\n  }\n\n  const setFilter = filter => {\n    dispatch({\n      type: 'set_filter',\n      payload: filter\n    })\n  }\n\n  const value = {\n    colors: getVisibleColors(state),\n    setColors,\n    addColor,\n    removeColor,\n    filter: state.filter,\n    setFilter,\n    addColorToRecents,\n    recentColors: state.recentColors\n  }\n\n  return (\n    <ColorContext.Provider value={value}>\n      {children}\n    </ColorContext.Provider>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}